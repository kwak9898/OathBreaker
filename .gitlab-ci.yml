stages:
  - install
  - test
  - build
  - deploy

cache:
  paths:
    - node_modules/

services:
  - postgres

variables:
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  DOCKER_TLS_CERTDIR: "/certs"
  SERVICE_PORT: 8090
  PROJECT_NAME: pumpkin-api

install:
  image: node:16-alpine
  stage: install
  tags:
    - docker
  script:
    - yarn install

test:
  stage: test
  tags:
    - docker
  script:
    - yarn test:ci

build-dev:
  stage: build
  only:
    - develop
  tags:
    - shell
  script:
    - docker build --target production-stage -t ${PROJECT_NAME} .

build-prod:
  services:
    - docker:20.10.16-dind
  image: docker:20.10.16
  stage: build
  only:
    - master
  tags:
    - docker
  script:
    - docker build --target production-stage -t ${PROJECT_NAME} .
  # - docker login
  # - docker push

deploy-dev:
  stage: deploy
  only:
    - develop
  tags:
    - shell
  script:
    - CONTAINER_ID=$(docker ps -a -f "name=pumpkin-api" --format "{{.ID}}") # 컨테이너 아이디만 추출
    - if [ "$CONTAINER_ID" != "" ]; then docker stop ${CONTAINER_ID}; docker rm ${CONTAINER_ID}; fi # 해당 서비스가 실행중일 경우 중지후 컨테이너 삭제
    - docker run -d -p ${SERVICE_PORT}:${SERVICE_PORT} --name ${PROJECT_NAME} ${PROJECT_NAME} # 실행하기

deploy-prod:
  services:
    - docker:20.10.16-dind
  image: docker:20.10.16
  stage: deploy
  only:
    - master
  tags:
    - docker
  script:
    - docker ps
    # - command deploy